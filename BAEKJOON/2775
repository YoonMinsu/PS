import java.io.*;

public class Main {

//    public static void print( int[][] apt ) {
//        for ( int i = 0; i < 15; ++i ) {
//            for ( int j = 1; j < 15; ++j ) {
//                System.out.print( apt[ i ][ j ] + " " );
//            }
//            System.out.println();
//        }
//    }

    // 층수에 있는 모든 사람 수 계산
    public static void Calc( int[][] apt ) {

        for ( int i = 1; i < 15; ++i ) {
            for ( int j = 1; j < 15; ++j ) {
                apt[ i ][ j ] = humanCnt( i, j, apt );
            }
        }
    }
    
    // 각 (1 ~ 14)층 (1 ~ 14)호에 있는 사람 계산
    public static int humanCnt( int i, int j, int[][] apt ) {
        int sum = 0;
        for( int x = 1; x <= j; ++x ) {
            sum = sum + apt[ i - 1 ][ x ];
        }
        return sum;
    }

    public static void main( String[] args ) throws IOException {
        BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );
        BufferedWriter bw = new BufferedWriter( new OutputStreamWriter( System.out ) );

        int[][] apt = new int[ 15 ][ 15 ];

        // 0층에 있는 모든 호( 1 ~ 14 ) 인원 채우기
        for( int i = 1; i < 15; ++i ) {
            apt[ 0 ][ i ] = i;
        }

        // 층수에 있는 모든 사람 수 계산
        Calc( apt );

        int t = Integer.parseInt( br.readLine() );

        while( t-- > 0 ) {
            int k = Integer.parseInt( br.readLine() );
            int n = Integer.parseInt( br.readLine() );

            bw.write( apt[ k ][ n ] + "\n" );
        }
        bw.flush();
        bw.close();

    }
}
